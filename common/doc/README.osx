Mac OS X Build Instructions
===========================

Building Boost with ASIO:
-------------------------

Please see the README.boost file for general instructions.


Installing zlib & openssl:
--------------------------

ASIO requires zlib and openssl for compression and SSL/TLS encryption
support, respectively.  These libraries are pre-installed on OS X.
However, you may instead choose to download and install the latest
versions from the following sites:

http://www.zlib.net
http://www.openssl.org


Logging frameworks:
-------------------

Note that the use of a logging framework is entirely optional, so you may
skip this step if you like.

If you have MacPorts (http://www.macports.org) already installed, it is easy
to use it to install the log4cpp library:

sudo port install log4cpp

If you do not have MacPorts or prefer to compile the logging framework from
source, you can download the tarballs from the following sites:

http://logging.apache.org/log4cxx
http://log4cpp.sourceforge.net

Note that the log4cplus library does not build properly under OS X, so you
will need to use log4cxx or log4cpp instead.


Building and installing Pion:
-----------------------------

Now you should be able to build and install Pion:

tar xvfz pion-<PROJECT>-<VERSION>.tar.gz
cd pion-<PROJECT>-<VERSION>
./configure [--with-boost=<BOOST_DIR>] \
	[--with-openssl] [--with-log4cpp=/opt/local]
make ; sudo make install

To build and run Pion's unit tests, run "make check"

Note that you only need to specify a "--with-boost=<BOOST_DIR>" parameter to
Pion's configure script if you installed Boost into an alternative directory
(other than /usr/local).


Building with XCode:
--------------------

There is an XCode project included in the root directory of each project
called "pion-<PROJECT>.xcodeproj".  You must run the "configure" script before
building anything within XCode -- this is used to generate the PionConfig.hpp
configuration file.  If you configure Pion to use any of the optional
libraries (such as openssl or log4cxx), then you must add the library's
headers to the project's include path, and also also add the library to the
project's link parameters.

To run PionWebServer from within XCode, you first need to configure
the executable's command arguments by right-clicking on PionWebServer
under the "Executables" group in the left menu, and selecting "Get Info." 
Under the "Arguments" tab, add the following argument:
"-c ../../net/utils/xcodeservices.conf" Next, set PionWebServer as the
"Active Target" and click on the "Build and Go" button.  Building
PionWebServer will also build all of the service plug-ins.
